# This file contains common pin mappings for the BIGTREETECH SKR mini
# E3 v1.2. To use this config, the firmware should be compiled for the
# STM32F103 with a "28KiB bootloader" and USB communication. Also,
# select "Enable extra low-level configuration options" and configure
# "GPIO pins to set at micro-controller startup" to "!PC13".

# The "make flash" command does not work on the SKR mini E3. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini E3 with that SD card.

# See docs/Config_Reference.md for a description of parameters.

# Note: This board has a design flaw in its thermistor circuits that
# cause inaccurate temperatures (most noticeable at low temperatures).


# __________________________________________________microcontroller configs__________________________________________________

[mcu]
serial: /dev/ttyAMA0
restart_method: command


# __________________________________________________stepper motors, extruder & tmc driver configs__________________________________________________

[stepper_x]
step_pin: PC6
dir_pin: PB15
enable_pin: !PC7
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC1
position_endstop: 0
position_max: 261
homing_speed: 150
homing_retract_dist: 5.0
second_homing_speed: 20

[tmc2209 stepper_x]
uart_pin: PC10
run_current: 0.620
hold_current: 0.500
stealthchop_threshold: 999999

[stepper_y]
step_pin: PB13
dir_pin: PB12
enable_pin: !PB14
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC0
position_endstop: 0
position_max: 236
homing_speed: 150
homing_retract_dist: 5.0
second_homing_speed: 20

[tmc2209 stepper_y]
uart_pin: PC11
run_current: 0.620
hold_current: 0.500
stealthchop_threshold: 999999

[stepper_z]
step_pin: PB10
dir_pin: !PB2
enable_pin: !PB11
microsteps: 16
rotation_distance: 8
endstop_pin: ^PC2
position_endstop: 0.0
position_max: 250

[tmc2209 stepper_z]
uart_pin: PC12
run_current: 0.580
hold_current: 0.500
stealthchop_threshold: 999999

[extruder]
step_pin: PB0
dir_pin: !PC5
enable_pin: !PB1
microsteps: 16
rotation_distance: 8.4348
nozzle_diameter: 0.400
filament_diameter: 1.750
max_extrude_only_distance: 100.0
max_extrude_cross_section: 50.0
pressure_advance: 0.155
heater_pin: PC8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
control: pid
pid_Kp=25.474
pid_Ki=1.587
pid_Kd=102.215
min_temp: 0
max_temp: 260
min_extrude_temp: 0

[tmc2209 extruder]
uart_pin: PD2
run_current: 0.450
hold_current: 0.400
stealthchop_threshold: 999999


# __________________________________________________heaters, fans & temperature senor configs__________________________________________________

[heater_bed]
heater_pin: PC9
sensor_type: ATC Semitec 104GT-2
sensor_pin: PC3
control: pid
pid_Kp=75.255
pid_Ki=1.656
pid_Kd=855.089
min_temp: 0
max_temp: 130

[fan]
pin: PA8

#[controller_fan controller_fan]
#pin: PB7
#fan_speed: 1.0
#idle_timeout: 5
#   The amount of time (in seconds) after a stepper driver or heater
#   was active and the fan should be kept running.
#heater: extruder, heater_bed
#stepper: stepper_x, stepper_y, stepper_z, extruder

[heater_fan temp_fan]
pin: PB7
fan_speed: 1.0
shutdown_speed: 1.0
heater: extruder, heater_bed
heater_temp: 50.0

[temperature_sensor pi_temp]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100


# __________________________________________________printer configs__________________________________________________

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 4000
max_z_velocity: 15
max_z_accel: 100

[idle_timeout]
timeout: 3600
gcode:
	TURN_OFF_HEATERS

[static_digital_output usb_pullup_enable]
pins: !PC13

[virtual_sdcard]
path: ~/gcode_files

[display_status]


# __________________________________________________input & ouput configs__________________________________________________

[output_pin LED]
pin: PB9
pwm: False
value: 1
shutdown_value: 0


# __________________________________________________gcode configs__________________________________________________

[save_variables]
filename: ~/klipper_config/saved_vars.cfg

[pause_resume]
recover_velocity: 100

[gcode_arcs]
resolution: 0.1

[respond]


# __________________________________________________gcode macro configs__________________________________________________

[safe_z_home]
home_xy_position: 260,0
speed: 150.0
z_hop: 5.0

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
default_parameter_E: 0.5
gcode:
	{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
	{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 2.0) %}
		{% set z_safe = 2.0 %}
	{% else %}
		{% set z_safe = max_z - act_z %}
	{% endif %}
	SAVE_GCODE_STATE NAME=PAUSE_state
	BASE_PAUSE
	G91
	G1 E-{E} F2100
	G1 Z{z_safe} F900
	G90
	G0 X{x_park} Y{y_park} F6000
	G91

[gcode_macro RESUME]
rename_existing: BASE_RESUME
default_parameter_E: 0.5
gcode:
	G91
	G1 E{E} F2100
	G90
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
	BASE_RESUME

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
	{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
	{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 2.0) %}
		{% set z_safe = 2.0 %}
	{% else %}
		{% set z_safe = max_z - act_z %}
	{% endif %}
	G91
	G1 Z{z_safe} F900
	G90
	G0 X{x_park} Y{y_park} F6000
	G91
	TURN_OFF_HEATERS
	M107
	CLEAR_PAUSE
	LED_off
	SDCARD_RESET_FILE
	BASE_CANCEL_PRINT

[gcode_macro LED_on]
gcode:
	SET_PIN PIN=LED VALUE=1

[gcode_macro LED_off]
gcode:
	SET_PIN PIN=LED VALUE=0

[gcode_macro LED_toggle]
gcode:
    {% if printer["output_pin LED"].value == 1 %}
        LED_off
    {% else %}
        LED_on
    {% endif %}

[gcode_macro clean_nozzle]
default_parameter_W: 3
default_parameter_E: 0.5
default_parameter_N: 1
gcode:
	{% if printer.save_variables.variables.clean_nozzle_calls|int >= N|int - 1 %}
		SAVE_VARIABLE VARIABLE=clean_nozzle_calls VALUE=0
		{% set wipe_count = W|int %}
		{% set x_0 = printer.toolhead.position.x|float %}
		{% set y_0 = printer.toolhead.position.y|float %}
		{% set z_0 = printer.toolhead.position.z|float %}
		{% set z_1 = z_0|float + 0.6 %}
		{% set S = printer.toolhead.max_accel|float %}
		{% set F = printer.toolhead.max_velocity|float * 60 %}
		M204 S4000
		G91
		G1 E-{E} F8000
		G90
		G1 Z{z_1} F900
		G1 X235 Z{z_1} F{F}
		{% for current_wipe in range(wipe_count) %}
			G1 X260 Z{z_1} F{F}
			G1 X235 Z{z_1} F{F}
		{% endfor %}
		G1 X{x_0} Z{z_1} F{F}
		G1 Z{z_0} F900
		G91
		G1 E{E} F8000
		M204 S{S}
		G90
	{% else %}
		SAVE_VARIABLE VARIABLE=clean_nozzle_calls VALUE={ printer.save_variables.variables.clean_nozzle_calls|int + 1 }
	{% endif %}

[gcode_macro initialize]
default_parameter_T0: 240 ; T0 temp
default_parameter_B: 80 ; bed temp
default_parameter_W: 4 ; nozzle clean wipes
default_parameter_E0: 10 ; T0 Prime amount
gcode:
	; Custom initialization G-code
	{% set F = printer.toolhead.max_velocity|float * 60 %}
	M140 S{B} ; Start heating bed
	M104 S{T0} ; Start heating extruder
	M220 S100
	{% if printer.toolhead.homed_axes != 'xyz' %} ; Checks if All Axes Homed
		G28	; Homes All Axes
	{% endif %}
	G90 ; Absolute positioning
	G1 Z1 F900
	G1 X260 F{F}
	M190 S{B} ; Wait for bed to reach temp before proceeding
	M109 S{T0} ; Wait for extruder to reach temp before proceeding
	{% if W > 1 %}
		clean_nozzle W={W|int - 1} E=0 ; Clean Nozzle
	{% endif %}
	G92 E0 ; Reset Extruder
	G91 ; Relative positioning
	G1 E{E0} F120 ; Prime T0
	G1 E-0.5 F8000 ; Retract a bit
	G92 E0 ; Reset Extruder
	G90 ; Absolute positioning
	G1 X235 F{F}

[gcode_macro test_loop]
gcode:
	QUERY_ENDSTOPS
	LED_toggle
	{% if printer.query_endstops.last_query["x"] == True %}
		LED_toggle
	{% endif %}

[gcode_macro test_loop_2]
gcode:
	{% for rep in range(0,10) %}
		QUERY_ENDSTOPS
		{% if printer.query_endstops.last_query["x"] == True %}
			LED_toggle
		{% endif %}
	{% endfor %}


# __________________________________________________delayed_gcode configs__________________________________________________

[delayed_gcode my_delayed_gcode]
initial_duration: 1.0
gcode:
	SAVE_VARIABLE VARIABLE=clean_nozzle_calls VALUE=0
